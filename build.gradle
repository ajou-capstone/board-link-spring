plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.8"
}

group = 'LinkerBell'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.security:spring-security-messaging'

    // Google Firebase Admin
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // opencsv
    implementation 'com.opencsv:opencsv:5.7.1'

    // Guava is a set of core Java libraries from Google that includes new collection types
    implementation "com.google.guava:guava:33.3.1-jre"

    // aws s3 & ses
    implementation 'software.amazon.awssdk:sesv2:2.26.31'
    implementation platform('software.amazon.awssdk:bom:2.27.24')
    implementation 'software.amazon.awssdk:s3'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0' // Or a compatible version
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.0'

    // testcontainer
    testImplementation "org.testcontainers:junit-jupiter:1.20.4"

}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// jacoco start
jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true // for github actions
        html.required = true // for us
        csv.required = false // for sonarQube
    }

    def QDomainList = []
    for (qPattern in '**/QA'..'**/QZ') { // QClass 대응
        QDomainList.add(qPattern + '*')
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            '**/*Application*',
                            '**/dto/**',
                            '**/domain/**',
                            '**/global/**',
                    ] + QDomainList)
                })
        )
    }
    finalizedBy jacocoTestCoverageVerification    // rule 수행
}

jacocoTestCoverageVerification {
    def QDomainList = []
    for (qPattern in '*.QA'..'*.QZ') { // QClass 대응
        QDomainList.add(qPattern + '*')
    }
    violationRules {
        rule {
            enabled = true // 활성화
            element = 'CLASS' // 클래스 단위로 커버리지 체크
            // includes = []

            // 코드 커버리지를 측정할 때 사용되는 지표
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            excludes = [
                    '**/*Application*',
                    '**/dto/**',
                    '**/domain/**',
                    '**/global/**',
            ] + QDomainList
        }

        // 여러 개의 rule 정의 가능
        rule {
        }
    }
}
// jacoco end
// ---------------- Test End